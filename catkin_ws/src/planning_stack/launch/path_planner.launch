<launch>
    <!-- declare the map config file -->
    <arg name="map_file" value="output.yaml"/>
    <!-- declare the costmap config file -->
    <arg name="costmap_file" value="global_costmap_params.yaml"/>

    <!-- start map server to publish the map to /map topic -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find planning_stack)/maps/$(arg map_file)" />

    <arg name="model" default="burger" />

    <arg name="move_forward_only" default="false"/>

    <arg name="cmd_vel_topic" default="/cmd_vel" />
    <arg name="odom_topic" default="odom" />

    <!-- assign a dummy transformation between map and base_link -->
    <!-- <node name="static_tf0" pkg="tf" type="static_transform_publisher" args="2 0 0 0 0 0 /map /base_link 100"/> -->

    <!-- Turtlebot3 -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
    </include>

    <!-- AMCL -->
    <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>

    <!-- Run the costmap node -->
    <!-- <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node" output="screen"> -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find planning_stack)/config/$(arg costmap_file)" command="load"/>
    </node>

    <!-- rviz -->
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>

</launch>

