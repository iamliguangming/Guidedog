<launch>
        <arg name="kbd_teleop" default="false"/>
        <arg name="rqt_teleop" default="false"/>
        <arg name="visualize" default="true"/>
        <arg name="with_robot" default="true"/>

        <arg name="simulation_factor" default="0.9"/> <!-- Speed up -->
        <arg name="update_rate" default="25.0"/> <!-- Hz -->
        
        <!-- Change the .world file name and .xml scenario file name here to the one you like -->
        <!-- Please modify the following two lines for loading customize .xml scenario and .world files.  -->
        <arg name="scene_file" default="social_contexts"/>
        <arg name="world_file" default="street_empty"/>
        <arg name="map_file_name" default="map_final"/>
        <arg name="map_file" default="$(find planning_stack)/maps/$(arg map_file_name).yaml"/>>

        <!-- Gazebo Robot Parameters -->
        <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
        <arg name="x_pos" default="50.45"/> 
        <arg name="y_pos" default="-51.25"/>
        <arg name="z_pos" default="0.0"/>
        <arg name="yaw"   default="-3.1415"/>

        <!-- Select Gazebo Robot Model. For our project, it is set to be 'burger'. -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />



        <!-- Simulator -->
        <!-- The scene_file is modified to read from customize scenarios folder inside customize pkg -->
        <include file="$(find pedsim_simulator)/launch/simulator.launch">
            <arg name="kbd_teleop" value="$(arg kbd_teleop)"/>
            <arg name="rqt_teleop" value="$(arg rqt_teleop)"/>
            <arg name="scene_file" value="$(find planning_stack)scenarios/$(arg scene_file).xml"/>
            <arg name="with_robot" value="$(arg with_robot)"/>
            <arg name="simulation_factor" value="$(arg simulation_factor)"/>
            <arg name="update_rate" value="$(arg update_rate)"/>
            <arg name="default_queue_size" value="10"/>
            <arg name="max_robot_speed" value="0.5"/>
            <arg name="robot_mode" value="1"/>
            <arg name="enable_groups" value="true"/>
            <arg name="pose_initial_x" value="5.0"/>
            <arg name="pose_initial_y" value="5.0"/>
            <arg name="pose_initial_theta" value="0.7"/>
        </include>

        <!-- Open Gazebo -->
        <!-- The .world file is modified to read from customize worlds folder inside customize pkg -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find planning_stack)/worlds/$(arg world_file).world"/>
            <arg name="paused" value="false"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="gui" value="true"/>
            <arg name="headless" value="false"/>
            <arg name="debug" value="false"/>
         </include>
         
         <!-- this node spawn pedsim actors to gazebo once, then the plugin updates their pose -->  
         <node pkg="pedsim_gazebo_plugin" type="spawn_pedsim_agents.py" name="spawn_pedsim_agents"  output="screen">
         </node>
        
        <!-- load turtlebot3 model into the gazebo world -->
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -param robot_description" />

        <!-- load the dummy rlocation node -->
        <node pkg="turtlebot3_gazebo" type="rlocation_node" name="rlocation_node"  output="screen">
        </node>
        <!-- rosrun turtlebot3_gazebo rlocation_node  -->

        <!-- Run the map server -->
        <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" >
        </node>  

        <!-- Run the controller -->
        <!-- <node pkg="planning_stack" type="simple_controller_node" name="simple_controller_node"  output="screen">
        </node> -->
        
        <!-- load the turtlebot3 teleop key controller -->
        <param name="model" value="$(arg model)"/>
        <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_keyboard"  output="screen">
        </node>

</launch>


